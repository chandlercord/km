# Copyright 2021 Kontain
# Derived from:
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: kontain-install-lib
  namespace: kube-system
  labels:
    app: kontain-init
data:
  kontain_install_lib.sh: |-
    #!/usr/bin/env bash

    # This will get overridden be ENV definition in kontain-deploy.yaml
    KONTAIN_RELEASE_URL="${KONTAIN_RELEASE_URL:-https://github.com/kontainapp/km/releases/download/v0.9.5/kontain_bin.tar.gz}"
    echo KONTAIN_RELEASE_URL is: ${KONTAIN_RELEASE_URL}

    # we use chroot here because the host is rooted at /root
    # and kkm install looks for sudo and dkms in locations on the host
    function install_kontain_artifacts() {

      ROOT_MOUNT_DIR="${ROOT_MOUNT_DIR:-/root}"

      # check to see if deltarpm is installed and if not install it (for Amzn Linux 2)
      source /$ROOT_MOUNT_DIR/etc/os-release
      if [[ "$ID" == "amzn" ]]; then 
        echo we are running this daemonset on ${ID}
        # pre-emptive workaround for yum rpmdb error
        chroot ${ROOT_MOUNT_DIR} rm /var/lib/rpm/__db*
        # update
        chroot ${ROOT_MOUNT_DIR} yum update -y
        sleep 2
        chroot ${ROOT_MOUNT_DIR} yum install  -y kernel-devel-$(uname -r)
        sleep 2
        chroot ${ROOT_MOUNT_DIR} ls /lib/modules
      elif [[ "$ID" == "ubuntu" ]]; then 
        echo we are running this daemonset on ${ID}
      fi;

      echo "Install Kontain Runtime Artifacts (KM & KRUN)"

      mkdir -p ${ROOT_MOUNT_DIR}/kontain-artifacts
      curl -Ls "${KONTAIN_RELEASE_URL}" | tar -xzf - -C ${ROOT_MOUNT_DIR}/kontain-artifacts

      mkdir -p ${ROOT_MOUNT_DIR}/opt/kontain/bin

      cp ${ROOT_MOUNT_DIR}/kontain-artifacts/km/km ${ROOT_MOUNT_DIR}/opt/kontain/bin/km
      chmod +x ${ROOT_MOUNT_DIR}/opt/kontain/bin/km

      cp ${ROOT_MOUNT_DIR}/kontain-artifacts/container-runtime/krun ${ROOT_MOUNT_DIR}/opt/kontain/bin/krun
      chmod +x ${ROOT_MOUNT_DIR}/opt/kontain/bin/krun

      # install shim
      mkdir -p ${ROOT_MOUNT_DIR}/opt/kontain/shim
      cp ${ROOT_MOUNT_DIR}/kontain-artifacts/cloud/k8s/deploy/shim/containerd-shim-krun-v2 ${ROOT_MOUNT_DIR}/opt/kontain/shim/containerd-shim-krun-v2
      chmod +x ${ROOT_MOUNT_DIR}/opt/kontain/shim/containerd-shim-krun-v2
      chroot ${ROOT_MOUNT_DIR} ln -sf /opt/kontain/shim/containerd-shim-krun-v2 /usr/bin/containerd-shim-krun-v2

      chmod +x ${ROOT_MOUNT_DIR}/kontain-artifacts/kkm.run

      # run kkm install on host
      sleep 2
      chroot ${ROOT_MOUNT_DIR} /kontain-artifacts/kkm.run -- --force-install

      sleep 2
      # check if module is installed
      lsmod |grep kkm
    }
