{
   // Use IntelliSense to learn about possible attributes.
   // Hover to view descriptions of existing attributes.
   // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
   "version": "0.2.0",
   "configurations": [
      {
         "name": "KM with a payload",
         "type": "cppdbg",
         "request": "launch",
         "program": "${workspaceFolder}/build/km/km",
         "args": [
            "tests/${input:payload}.km"
         ],
         "stopAtEntry": true,
         "cwd": "${workspaceFolder}",
         "environment": [],
         "externalConsole": false,
         "MIMode": "gdb",
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            }
         ]
      },
      {
         "name": "KM gdb stub with a payload",
         "type": "cppdbg",
         "request": "launch",
         "program": "${workspaceFolder}/build/km/km",
         "args": [
            "-g",
            "3333",
            "tests/${input:payload}.km"
         ],
         "stopAtEntry": false,
         "cwd": "${workspaceFolder}",
         "environment": [],
         "externalConsole": false,
         "MIMode": "gdb",
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            }
         ]
      },
      {
         "name": "Payload debug (from tests)",
         "type": "cppdbg",
         "request": "launch",
         "cwd": "${workspaceFolder}",
         "program": "${workspaceFolder}/tests/${input:payload}.km",
         "args": [
            "set debug remote 0"
         ],
         "stopAtEntry": true,
         "miDebuggerServerAddress": "localhost:3333",
         "miDebuggerArgs": "--silent",
         "debugServerPath": "${workspaceFolder}/build/km/km",
         "debugServerArgs": "-g 3333 ${workspaceFolder}/tests/${input:payload}.km",
         "serverLaunchTimeout": 5000,
         "filterStderr": true,
         "filterStdout": false,
         "serverStarted": "GdbServerStubStarted",
         "logging": {
            "moduleLoad": false,
            "trace": false,
            "engineLogging": false,
            "programOutput": true,
            "exceptions": true,
            "traceResponse": false
         },
         "environment": [],
         "externalConsole": false,
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            },
            {
               "description": "Make sure we stop somewhere",
               "text": "b printf",
               "ignoreFailures": false
            }
         ]
      },
      {
         "name": "KM dump",
         "type": "cppdbg",
         "request": "launch",
         "program": "${workspaceFolder}/build/km/km",
         "args": [
            "tests/${input:payload}.km"
         ],
         "coreDumpPath": "${workspaceFolder}/build/km/core",
         "stopAtEntry": true,
         "cwd": "${workspaceFolder}",
         "environment": [],
         "externalConsole": false,
         "MIMode": "gdb",
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            }
         ]
      },
   ],
   "inputs": [
      {
         "id": "payload",
         "description": "payload file (basename) to debug (e.g. 'hello' for tests/hello.km ",
         "default": "hello",
         "type": "pickString",
         "options": [
            "exit_value_test",
            "hello_test",
            "hello_html_test",
            "hello_loop_test",
            "hello_2_loops_test",
            "threads_test",
            "load_test",
            "brk_test",
            "gdb_test",
            "mmap_test",
            "getline_test",
            "mem_test",
            "hello_2_loops",
            "mutex_test"
         ]
      }
   ]
}